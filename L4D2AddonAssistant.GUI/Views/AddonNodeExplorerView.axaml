<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:v="using:L4D2AddonAssistant.Views"
             xmlns:vm="using:L4D2AddonAssistant.ViewModels"
             xmlns:r="using:L4D2AddonAssistant.Resources"
             xmlns:me="using:L4D2AddonAssistant.MarkupExtensions"
             mc:Ignorable="d" d:DesignWidth="1400" d:DesignHeight="900"
             x:Class="L4D2AddonAssistant.Views.AddonNodeExplorerView"
             x:DataType="vm:AddonNodeExplorerViewModel">
  <Design.DataContext>
    <vm:AddonNodeExplorerViewModelDesign/>
  </Design.DataContext>
  
  <Grid
    RowDefinitions="Auto, Auto, *"
    ColumnDefinitions="*, 4, 400">
    <Grid
      RowDefinitions="Auto"
      ColumnDefinitions="Auto, Auto, *"
      Grid.Row="0"
      Grid.Column="0" 
      Margin="5">
      <Grid.Styles>
        <Style Selector="Button">
          <Setter Property="Background" Value="Transparent"/>
          <Style Selector="^:disabled ContentPresenter">
            <Setter Property="Background" Value="Transparent"/>
          </Style>
        </Style>

        <Style Selector="Button.Regular > PathIcon">
          <Setter Property="Width" Value="25"/>
          <Setter Property="Height" Value="25"/>
        </Style>
      </Grid.Styles>
       
      <Button
        Command="{Binding GotoParentCommand}"
        Classes="Regular"
        Grid.Row="0" Grid.Column="0">
        <PathIcon Data="{StaticResource icon_arrow_up}"/>
      </Button>

      <Button
        Command="{Binding GotoRootCommand}"
        Classes="Regular"
        Grid.Row="0" Grid.Column="1">
        <PathIcon Data="{StaticResource icon_home}"/>
      </Button>

      <ScrollViewer 
        Grid.Row="0" Grid.Column="2"
        HorizontalScrollBarVisibility="Auto">
        <v:AddonNodeNavBarView/>
      </ScrollViewer>
    </Grid>

    <!--search, sort, view kind-->
    <DockPanel
      Grid.Row="1" Grid.Column="0">
      <DockPanel.Styles>
        <Style Selector="PathIcon">
          <Setter Property="Width" Value="20"/>
          <Setter Property="Height" Value="20"/>
        </Style>
      </DockPanel.Styles>
      <!--view kind-->
      <ComboBox
        DockPanel.Dock="Right"
        Classes="EnumComboBox"
        ItemsSource="{Binding Source={me:EnumValues {x:Type vm:AddonNodeListItemViewKind}}}"
        SelectedItem="{Binding ContainerViewModel.ListItemViewKind}"
        Margin="5"/>
      <!--sort-->
      <StackPanel
        DockPanel.Dock="Right"
        Orientation="Horizontal"
        HorizontalAlignment="Center"
        VerticalAlignment="Center">
        <Panel>
          <Button
          Command="{Binding ToggleOrderDirection}"
          Content="{x:Static r:Texts.Ascending}"
          IsVisible="{Binding IsAscendingOrder}"/>
          <Button
            Command="{Binding ToggleOrderDirection}"
            Content="{x:Static r:Texts.Descending}"
            IsVisible="{Binding !IsAscendingOrder}"/>
        </Panel>
        <ComboBox
          Classes="EnumComboBox"
          ItemsSource="{Binding Source={me:EnumValues {x:Type vm:AddonNodeSortMethod}}}"
          SelectedItem="{Binding SortMethod}"
          Margin="5"/>
      </StackPanel>
      <!--search-->
      <StackPanel
        DockPanel.Dock="Left"
        Orientation="Horizontal"
        HorizontalAlignment="Left"
        VerticalAlignment="Center">
        <TextBox
          Text="{Binding SearchText}"
          Watermark="{x:Static r:Texts.Search}"
          VerticalAlignment="Center"
          Margin="5"
          MinWidth="150"
          MaxWidth="300"/>
        <PathIcon
          Data="{StaticResource icon_search}"
          IsVisible="{Binding !IsSearchTextClearable}"
          VerticalAlignment="Center"
          Margin="5"/>
        <Button
          Command="{Binding ClearSearchText}"
          IsVisible="{Binding IsSearchTextClearable}"
          Background="Transparent"
          VerticalAlignment="Center"
          Margin="5">
          <PathIcon Data="{StaticResource icon_dismiss}"/>
        </Button>
        <Button
          Background="Transparent"
          VerticalAlignment="Center"
          Margin="5">
          <PathIcon Data="{StaticResource icon_more}"/>
          <Button.Flyout>
            <Flyout>
              <Grid
                RowDefinitions="Auto, Auto, Auto"
                ColumnDefinitions="Auto, 20, Auto">
                <Grid.Styles>
                  <Style Selector="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                  </Style>
                </Grid.Styles>
                
                <TextBlock
                  Grid.Row="0" Grid.Column="0"
                  Text="{x:Static r:Texts.IgnoreCase}"/>
                <CheckBox
                  Grid.Row="0" Grid.Column="2"
                  IsChecked="{Binding SearchIgnoreCase}"/>
                
                <TextBlock
                  Grid.Row="1" Grid.Column="0"
                  Text="{x:Static r:Texts.Flatten}"/>
                <CheckBox
                  Grid.Row="1" Grid.Column="2"
                  IsChecked="{Binding IsSearchFlatten}"/>
                
                <TextBlock
                  Grid.Row="2" Grid.Column="0"
                  Text="{x:Static r:Texts.UseRegex}"/>
                <CheckBox
                  Grid.Row="2" Grid.Column="2"
                  IsChecked="{Binding IsSearchRegex}"/>
              </Grid>
            </Flyout>
          </Button.Flyout>
        </Button>
        <TextBlock
          IsVisible="{Binding IsSearching}"
          Text="{x:Static r:Texts.SearchingMessage}"
          VerticalAlignment="Center"
          Margin="5"/>
      </StackPanel>
    </DockPanel>

    <!--Container View-->
    <Border
      Grid.Row="2"
      Grid.Column="0"
      BorderThickness="2"
      BorderBrush="Gray">
      <v:AddonNodeContainerView
        DataContext="{Binding ContainerViewModel}">
      </v:AddonNodeContainerView>
      <Border.ContextMenu>
        <ContextMenu>
          <MenuItem Header="{x:Static r:Texts.Refresh}" Command="{Binding Refresh}"/>
          
          <Separator/>
          
          <MenuItem Header="{x:Static r:Texts.New}">
            <MenuItem Header="{x:Static r:Texts.Group}" Command="{Binding NewGroupCommand}"/>
            <MenuItem Header="{x:Static r:Texts.WorkshopAddon}" Command="{Binding NewWorkshopAddonCommand}"/>
          </MenuItem>
          
          <Separator/>
          
          <MenuItem Header="{x:Static r:Texts.Enable}" Command="{Binding EnableCommand}"/>
          <MenuItem Header="{x:Static r:Texts.Disable}" Command="{Binding DisableCommand}"/>
          <MenuItem Header="{x:Static r:Texts.EnableRecursively}" Command="{Binding EnableRecursivelyCommand}"/>
          <MenuItem Header="{x:Static r:Texts.DisableRecursively}" Command="{Binding DisableRecursivelyCommand}"/>
          
          <Separator/>
          
          <MenuItem Header="{x:Static r:Texts.Move}" Command="{Binding MoveCommand}"/>
          <MenuItem Header="{x:Static r:Texts.MoveHere}" Command="{Binding MoveHereCommand}"/>
          <MenuItem Header="{x:Static r:Texts.CancelMove}" Command="{Binding CancelMoveCommand}"/>
          
          <Separator/>
          
          <MenuItem Header="{x:Static r:Texts.Delete}" Command="{Binding DeleteCommand}" CommandParameter="{x:False}"/>
          <MenuItem Header="{x:Static r:Texts.DeleteAndRetainFile}" Command="{Binding DeleteCommand}" CommandParameter="{x:True}"/>
          
        </ContextMenu>
      </Border.ContextMenu>
    </Border>

    <GridSplitter
      Grid.Row="0" Grid.Column="1" Grid.RowSpan="3"
      ResizeDirection="Columns"/>
    
    <!--AddonNodeView Panel-->
    <Border
      Grid.Row="0"
      Grid.Column="2"
      Grid.RowSpan="3"
      BorderThickness="2"
      BorderBrush="Gray">
      <ScrollViewer>
        <Panel>
          <StackPanel
            Orientation="Vertical"
            Margin="5, 100, 5, 5"
            IsVisible="{Binding IsMultipleSelection, FallbackValue=False}">
            <TextBlock
              Text="{Binding SelectionCount, StringFormat={x:Static r:Texts.MultipleItemsSelected}}"
              Margin="5"
              TextAlignment="Center"/>
            <TextBlock
              Text="{Binding SelectionNames}"
              Margin="5"
              TextAlignment="Center"
              TextWrapping="Wrap"/>
          </StackPanel>

          <Panel
            IsVisible="{Binding IsSingleSelection, FallbackValue=False}"
            Margin="10">
            <v:AddonNodeView DataContext="{Binding SingleSelection, TargetNullValue={x:Null}}"/>
          </Panel>
        </Panel>
      </ScrollViewer>
    </Border>
    
  </Grid>
</UserControl>
