<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:v="using:L4D2AddonAssistant.Views"
             xmlns:vm="using:L4D2AddonAssistant.ViewModels"
             xmlns:r="using:L4D2AddonAssistant.Resources"
             xmlns:me="using:L4D2AddonAssistant.MarkupExtensions"
             xmlns:local="using:L4D2AddonAssistant"
             mc:Ignorable="d" d:DesignWidth="1400" d:DesignHeight="900"
             x:Class="L4D2AddonAssistant.Views.AddonNodeExplorerView"
             x:DataType="vm:AddonNodeExplorerViewModel">
  <Design.DataContext>
    <vm:AddonNodeExplorerViewModelDesign/>
  </Design.DataContext>
  
  <Grid
    RowDefinitions="Auto, Auto, *"
    ColumnDefinitions="*, 4, 400">
    <Grid
      RowDefinitions="Auto"
      ColumnDefinitions="Auto, Auto, *"
      Grid.Row="0"
      Grid.Column="0" 
      Margin="5">
      <Grid.Styles>
        <Style Selector="Button">
          <Setter Property="Background" Value="Transparent"/>
          <Style Selector="^:disabled ContentPresenter">
            <Setter Property="Background" Value="Transparent"/>
          </Style>
        </Style>

        <Style Selector="Button.Regular > PathIcon">
          <Setter Property="Width" Value="25"/>
          <Setter Property="Height" Value="25"/>
        </Style>
      </Grid.Styles>
       
      <Button
        Command="{Binding GotoParentCommand}"
        Classes="Regular"
        Grid.Row="0" Grid.Column="0">
        <PathIcon Data="{StaticResource icon_arrow_up}"/>
      </Button>

      <Button
        Command="{Binding GotoRootCommand}"
        Classes="Regular"
        Grid.Row="0" Grid.Column="1">
        <PathIcon Data="{StaticResource icon_home}"/>
      </Button>

      <ScrollViewer 
        Grid.Row="0" Grid.Column="2"
        HorizontalScrollBarVisibility="Auto">
        <v:AddonNodeNavBarView/>
      </ScrollViewer>
    </Grid>

    <!--search, sort, view kind-->
    <DockPanel
      Grid.Row="1" Grid.Column="0">
      <DockPanel.Styles>
        <Style Selector="PathIcon">
          <Setter Property="Width" Value="20"/>
          <Setter Property="Height" Value="20"/>
        </Style>
      </DockPanel.Styles>
      <!--view kind-->
      <ComboBox
        DockPanel.Dock="Right"
        Classes="EnumComboBox"
        ItemsSource="{Binding Source={me:EnumValues {x:Type vm:AddonNodeListItemViewKind}}}"
        SelectedItem="{Binding ContainerViewModel.ListItemViewKind}"
        Margin="5"/>
      <!--sort-->
      <StackPanel
        DockPanel.Dock="Right"
        Orientation="Horizontal"
        HorizontalAlignment="Center"
        VerticalAlignment="Center">
        <Panel>
          <Button
            Command="{Binding ToggleOrderDirection}"
            Content="{x:Static r:Texts.Ascending}"
            IsVisible="{Binding IsAscendingOrder, FallbackValue=false}"/>
          <Button
            Command="{Binding ToggleOrderDirection}"
            Content="{x:Static r:Texts.Descending}"
            IsVisible="{Binding !IsAscendingOrder, FallbackValue=false}"/>
        </Panel>
        <ComboBox
          Classes="EnumComboBox"
          ItemsSource="{Binding Source={me:EnumValues {x:Type vm:AddonNodeSortMethod}}}"
          SelectedItem="{Binding SortMethod}"
          Margin="5"/>
      </StackPanel>
      <!--search-->
      <StackPanel
        DockPanel.Dock="Left"
        Orientation="Horizontal"
        HorizontalAlignment="Left"
        VerticalAlignment="Center">
        <TextBox
          Text="{Binding SearchText}"
          Watermark="{x:Static r:Texts.Search}"
          VerticalAlignment="Center"
          Margin="5"
          MinWidth="150"
          MaxWidth="300"/>
        <PathIcon
          Data="{StaticResource icon_search}"
          IsVisible="{Binding !IsSearchTextClearable}"
          VerticalAlignment="Center"
          Margin="5"/>
        <Button
          Command="{Binding ClearSearchText}"
          IsVisible="{Binding IsSearchTextClearable, FallbackValue=false}"
          Background="Transparent"
          VerticalAlignment="Center"
          Margin="5">
          <PathIcon Data="{StaticResource icon_dismiss}"/>
        </Button>
        <Button
          Name="searchOptionsButton"
          Background="Transparent"
          VerticalAlignment="Center"
          Margin="5">
          <PathIcon Data="{StaticResource icon_more}"/>
        </Button>
        <TextBlock
          Text="{x:Static r:Texts.FilterEnabledMessage}"
          IsVisible="{Binding IsFilterEnabled, FallbackValue=False}"
          VerticalAlignment="Center"
          Margin="5"/>
        <TextBlock
          IsVisible="{Binding IsSearching, FallbackValue=false}"
          Text="{x:Static r:Texts.SearchingMessage}"
          VerticalAlignment="Center"
          Margin="5"/>
      </StackPanel>
    </DockPanel>

    <!--Container View-->
    <Border
      Grid.Row="2"
      Grid.Column="0"
      BorderThickness="2"
      BorderBrush="Gray">
      <DockPanel>
        <!--moving nodes-->
        <Panel
          DockPanel.Dock="Top"
          IsVisible="{Binding MovingNodeNames, Converter={x:Static ObjectConverters.IsNotNull}}">
          <ScrollViewer
            HorizontalScrollBarVisibility="Auto">
            <Panel
              Margin="5, 10, 5, 20">
              <TextBlock
                Text="{Binding MovingNodeNames, StringFormat={x:Static r:Texts.MovingMessage}}"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"/>
            </Panel>
          </ScrollViewer>
        </Panel>
        <!--search options-->
        <Panel
          DockPanel.Dock="Left"
          Name="searchOptionsControl"
          IsVisible="False">
          <ScrollViewer
            Width="250"
            HorizontalScrollBarVisibility="Disabled">
            <StackPanel
              Orientation="Vertical"
              Margin="5">
              <StackPanel.Styles>
                <Style Selector="TextBlock">
                  <Setter Property="VerticalAlignment" Value="Center"/>
                  <Setter Property="Margin" Value="5"/>
                  <Setter Property="TextWrapping" Value="Wrap"/>
                </Style>
                <Style Selector="CheckBox">
                  <Setter Property="HorizontalAlignment" Value="Right"/>
                  <Setter Property="Margin" Value="5"/>
                </Style>
                <Style Selector="ComboBox">
                  <Setter Property="HorizontalAlignment" Value="Right"/>
                  <Setter Property="VerticalAlignment" Value="Center"/>
                  <Setter Property="Margin" Value="5"/>
                </Style>
              </StackPanel.Styles>
              <Grid
                RowDefinitions="Auto, Auto, Auto, Auto, Auto"
                ColumnDefinitions="Auto, *">
                <TextBlock
                  Grid.Row="0" Grid.Column="0"
                  Text="{x:Static r:Texts.IgnoreCase}"/>
                <CheckBox
                  Grid.Row="0" Grid.Column="1"
                  IsChecked="{Binding SearchIgnoreCase}"/>

                <TextBlock
                  Grid.Row="1" Grid.Column="0"
                  Text="{x:Static r:Texts.Flatten}"/>
                <CheckBox
                  Grid.Row="1" Grid.Column="1"
                  IsChecked="{Binding IsSearchFlatten}"/>

                <TextBlock
                  Grid.Row="2" Grid.Column="0"
                  Text="{x:Static r:Texts.UseRegex}"/>
                <CheckBox
                  Grid.Row="2" Grid.Column="1"
                  IsChecked="{Binding IsSearchRegex}"/>

                <TextBlock
                  Grid.Row="3" Grid.Column="0"
                  Text="{x:Static r:Texts.Filter}"/>
                <CheckBox
                  Grid.Row="3" Grid.Column="1"
                  IsChecked="{Binding IsFilterEnabled}"/>

                <TextBlock
                  Grid.Row="4" Grid.Column="0"
                  Text="{x:Static r:Texts.TagFilterMode}"/>
                <ComboBox
                  Grid.Row="4" Grid.Column="1"
                  ItemsSource="{Binding Source={me:EnumValues {x:Type local:AddonTagFilterMode}}}"
                  Classes="EnumComboBox"
                  SelectedItem="{Binding TagFilterMode}"/>
              </Grid>
              <StackPanel
                Orientation="Vertical"
                IsVisible="{Binding IsFilterEnabled}">
                <TextBlock
                  Text="{x:Static r:Texts.Tags}"/>
                <v:AddonTagCheckBoxList/>
              </StackPanel>
            </StackPanel>
          </ScrollViewer>
        </Panel>
        <v:AddonNodeContainerView
          DataContext="{Binding ContainerViewModel}"/>
      </DockPanel>
      <Border.ContextMenu>
        <ContextMenu>
          <MenuItem Header="{x:Static r:Texts.Refresh}" Command="{Binding Refresh}"/>

          <Separator/>

          <MenuItem Header="{x:Static r:Texts.New}">
            <MenuItem Header="{x:Static r:Texts.Group}" Command="{Binding NewGroupCommand}"/>
            <MenuItem Header="{x:Static r:Texts.WorkshopAddon}" Command="{Binding NewWorkshopAddonCommand}"/>
            <MenuItem Header="{x:Static r:Texts.WorkshopCollection}" Command="{Binding NewWorkshopCollectionCommand}"/>
          </MenuItem>

          <Separator/>

          <MenuItem Header="{x:Static r:Texts.Enable}" Command="{Binding EnableCommand}"/>
          <MenuItem Header="{x:Static r:Texts.Disable}" Command="{Binding DisableCommand}"/>
          <MenuItem Header="{x:Static r:Texts.EnableRecursively}" Command="{Binding EnableRecursivelyCommand}"/>
          <MenuItem Header="{x:Static r:Texts.DisableRecursively}" Command="{Binding DisableRecursivelyCommand}"/>

          <Separator/>

          <MenuItem Header="{x:Static r:Texts.Move}" Command="{Binding MoveCommand}" HotKey="Ctrl+X"/>
          <MenuItem Header="{x:Static r:Texts.MoveHere}" Command="{Binding MoveHereCommand}" HotKey="Ctrl+V"/>
          <MenuItem Header="{x:Static r:Texts.CancelMove}" Command="{Binding CancelMoveCommand}"/>

          <Separator/>

          <MenuItem Header="{x:Static r:Texts.Delete}" Command="{Binding DeleteCommand}" CommandParameter="{x:False}"/>
          <MenuItem Header="{x:Static r:Texts.DeleteAndRetainFile}" Command="{Binding DeleteCommand}" CommandParameter="{x:True}"/>

        </ContextMenu>
      </Border.ContextMenu>
    </Border>

    <GridSplitter
      Grid.Row="0" Grid.Column="1" Grid.RowSpan="3"
      ResizeDirection="Columns"/>
    
    <!--AddonNodeView Panel-->
    <Border
      Grid.Row="0"
      Grid.Column="2"
      Grid.RowSpan="3"
      BorderThickness="2"
      BorderBrush="Gray">
      <ScrollViewer>
        <Panel>
          <StackPanel
            Orientation="Vertical"
            Margin="5, 100, 5, 5"
            IsVisible="{Binding IsMultipleSelection, FallbackValue=False}">
            <TextBlock
              Text="{Binding SelectionCount, StringFormat={x:Static r:Texts.MultipleItemsSelected}}"
              Margin="5"
              TextAlignment="Center"/>
            <TextBlock
              Text="{Binding SelectionNames}"
              Margin="5"
              TextAlignment="Center"
              TextWrapping="Wrap"/>
          </StackPanel>

          <Panel
            IsVisible="{Binding IsSingleSelection, FallbackValue=False}"
            Margin="10">
            <v:AddonNodeView DataContext="{Binding SingleSelection, TargetNullValue={x:Null}}"/>
          </Panel>
        </Panel>
      </ScrollViewer>
    </Border>
    
  </Grid>
</UserControl>
